// generated with ast extension for cup
// version 0.8
// 10/1/2022 0:30:6


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ActParsOptional ActParsOptional);
    public void visit(OptionalNumConst OptionalNumConst);
    public void visit(Mulop Mulop);
    public void visit(OptionalFieldAccess OptionalFieldAccess);
    public void visit(Relop Relop);
    public void visit(MethodType MethodType);
    public void visit(OptionalFacts OptionalFacts);
    public void visit(AddopTermArray AddopTermArray);
    public void visit(OptionalBrackets OptionalBrackets);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(VarList VarList);
    public void visit(DeclList DeclList);
    public void visit(RecordVarDecl RecordVarDecl);
    public void visit(OptionalFieldAccessList OptionalFieldAccessList);
    public void visit(MulopFactorArray MulopFactorArray);
    public void visit(OptionalExpr OptionalExpr);
    public void visit(OptionalTerms OptionalTerms);
    public void visit(MethodVarDecl MethodVarDecl);
    public void visit(FormalParamList FormalParamList);
    public void visit(OptionalRelopExpr OptionalRelopExpr);
    public void visit(OptionalFactorExpr OptionalFactorExpr);
    public void visit(UnaryMinus UnaryMinus);
    public void visit(StatementsArray StatementsArray);
    public void visit(ConstAssignList ConstAssignList);
    public void visit(ExprArray ExprArray);
    public void visit(OptionalFactorActPars OptionalFactorActPars);
    public void visit(DesignatorChoice DesignatorChoice);
    public void visit(Statement Statement);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(SingleStatement SingleStatement);
    public void visit(FormPars FormPars);
    public void visit(ConstType ConstType);
    public void visit(OptionalElse OptionalElse);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLESSEQ RelopLESSEQ);
    public void visit(RelopLESS RelopLESS);
    public void visit(RelopGREQ RelopGREQ);
    public void visit(RelopGREATER RelopGREATER);
    public void visit(RelopNOTEQ RelopNOTEQ);
    public void visit(RelopEQUALSTO RelopEQUALSTO);
    public void visit(Assignop Assignop);
    public void visit(OptionalFactorExprNo OptionalFactorExprNo);
    public void visit(OptionalFactorExprYes OptionalFactorExprYes);
    public void visit(OptionalFactorActParsNo OptionalFactorActParsNo);
    public void visit(OptionalFactorActParsYes OptionalFactorActParsYes);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewType FactorNewType);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNumber FactorNumber);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(MulopFactor MulopFactor);
    public void visit(MulopFactorArrayEpsilon MulopFactorArrayEpsilon);
    public void visit(MulopFactorArrayRecursion MulopFactorArrayRecursion);
    public void visit(Term Term);
    public void visit(AddopTerm AddopTerm);
    public void visit(AddopTermArrayEpsilon AddopTermArrayEpsilon);
    public void visit(AddopTermArrayRecursion AddopTermArrayRecursion);
    public void visit(UnaryMinusNo UnaryMinusNo);
    public void visit(UnaryMinusYes UnaryMinusYes);
    public void visit(Expr Expr);
    public void visit(OptionalNumConstNo OptionalNumConstNo);
    public void visit(OptionalNumConstYes OptionalNumConstYes);
    public void visit(OptionalExprNo OptionalExprNo);
    public void visit(OptionalExprYes OptionalExprYes);
    public void visit(OptionalTerm OptionalTerm);
    public void visit(OptionalRelopExprNo OptionalRelopExprNo);
    public void visit(OptionalRelopExprYes OptionalRelopExprYes);
    public void visit(CondFact CondFact);
    public void visit(OptionalFact OptionalFact);
    public void visit(OptionalFactsNo OptionalFactsNo);
    public void visit(OptionalFactsYes OptionalFactsYes);
    public void visit(CondTerm CondTerm);
    public void visit(OptionalTermsNo OptionalTermsNo);
    public void visit(OptionalTermsYes OptionalTermsYes);
    public void visit(Condition Condition);
    public void visit(CommaExpr CommaExpr);
    public void visit(ExprArrayEpsilon ExprArrayEpsilon);
    public void visit(ExprArrayRecursion ExprArrayRecursion);
    public void visit(ActPars ActPars);
    public void visit(ActParsOptionalNo ActParsOptionalNo);
    public void visit(ActParsOptionalYes ActParsOptionalYes);
    public void visit(ArrayAccess ArrayAccess);
    public void visit(FieldAccess FieldAccess);
    public void visit(OptionalFieldAccessListEpsilon OptionalFieldAccessListEpsilon);
    public void visit(OptionalFieldAccessListRecursion OptionalFieldAccessListRecursion);
    public void visit(Designator Designator);
    public void visit(DesignatorChoiceDec DesignatorChoiceDec);
    public void visit(DesignatorChoiceInc DesignatorChoiceInc);
    public void visit(DesignatorChoiceParams DesignatorChoiceParams);
    public void visit(DesignatorChoiceAssign DesignatorChoiceAssign);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(OptionalElseNo OptionalElseNo);
    public void visit(OptionalElseYes OptionalElseYes);
    public void visit(SingleStatementNine SingleStatementNine);
    public void visit(SingleStatementEight SingleStatementEight);
    public void visit(SingleStatementSeven SingleStatementSeven);
    public void visit(SingleStatementSix SingleStatementSix);
    public void visit(SingleStatementFive SingleStatementFive);
    public void visit(SingleStatementFour SingleStatementFour);
    public void visit(SingleStatementThree SingleStatementThree);
    public void visit(SingleStatementTwo SingleStatementTwo);
    public void visit(SingleStatementOne SingleStatementOne);
    public void visit(Label Label);
    public void visit(StatementsArrayEpsilon StatementsArrayEpsilon);
    public void visit(StatementsArrayRecursion StatementsArrayRecursion);
    public void visit(Statements Statements);
    public void visit(StatementsArr StatementsArr);
    public void visit(StatementNoLabel StatementNoLabel);
    public void visit(StatementLabel StatementLabel);
    public void visit(NoStmt NoStmt);
    public void visit(StatementsList StatementsList);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(MethodVarDeclNoRecursion MethodVarDeclNoRecursion);
    public void visit(MethodVarDeclRecursion MethodVarDeclRecursion);
    public void visit(MethodVoidType MethodVoidType);
    public void visit(MethodTypeType MethodTypeType);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(RecordVarDeclNoRecursion RecordVarDeclNoRecursion);
    public void visit(RecordVarDeclRecursion RecordVarDeclRecursion);
    public void visit(RecordDecl RecordDecl);
    public void visit(OptionalBracketsNo OptionalBracketsNo);
    public void visit(OptionalBracketsYes OptionalBracketsYes);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(VarListMultiple VarListMultiple);
    public void visit(VarListNoRecursion VarListNoRecursion);
    public void visit(VarListRecursion VarListRecursion);
    public void visit(VarDecl VarDecl);
    public void visit(ConstBool ConstBool);
    public void visit(ConstChar ConstChar);
    public void visit(ConstNumber ConstNumber);
    public void visit(NoConstAssignList NoConstAssignList);
    public void visit(ConstAssignListComma ConstAssignListComma);
    public void visit(ConstAssign ConstAssign);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoDeclList NoDeclList);
    public void visit(RecordDeclarationsList RecordDeclarationsList);
    public void visit(VarDeclarationsList VarDeclarationsList);
    public void visit(ConstDeclarationsList ConstDeclarationsList);
    public void visit(Program Program);

}
